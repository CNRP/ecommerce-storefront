This file is a merged representation of a subset of the codebase, containing specifically included files, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Only files matching these patterns are included: resources/views/components/**, resources/views/components/cart/**, app/View/**, resources/views/layouts/**, resources/js/stores
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
app/
  View/
    Components/
      Cart/
        AddToCartButton.php
        CartIcon.php
        CartSidebar.php
      UI/
        Button.php
resources/
  js/
    stores/
      cart.js
  views/
    components/
      cart/
        add-to-cart-button.blade.php
        cart-icon.blade.php
        cart-sidebar.blade.php
      navigation/
        auth-mobile.blade.php
        auth.blade.php
        main.blade.php
      ui/
        button.blade.php
        toast-container.blade.php
      footer.blade.php
    layouts/
      frontend.blade.php
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="app/View/Components/Cart/AddToCartButton.php">
<?php

namespace App\View\Components\Cart;

use App\Models\Product\Product;
use App\Models\Product\ProductVariant;
use Illuminate\View\Component;

class AddToCartButton extends Component
{
    public function __construct(
        public Product|ProductVariant $item,
        public int $quantity = 1,
        public string $size = 'md',
        public bool $showQuantitySelector = false,
        public string $variant = 'primary'
    ) {}

    public function canAddToCart(): bool
    {
        if ($this->item instanceof ProductVariant) {
            return $this->item->is_active &&
                   $this->item->product->status === 'published' &&
                   $this->item->inventory_quantity > 0;
        }

        return $this->item->status === 'published' && $this->item->isInStock();
    }

    public function getItemId(): int
    {
        return $this->item->id;
    }

    public function getProductId(): int
    {
        return $this->item instanceof ProductVariant
            ? $this->item->product_id
            : $this->item->id;
    }

    public function getVariantId(): ?int
    {
        return $this->item instanceof ProductVariant ? $this->item->id : null;
    }

    public function getButtonClasses(): string
    {
        $baseClasses = 'inline-flex items-center justify-center font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';

        $sizeClasses = match ($this->size) {
            'sm' => 'px-3 py-1 text-sm',
            'lg' => 'px-6 py-3 text-lg',
            default => 'px-4 py-2 text-base'
        };

        $variantClasses = match ($this->variant) {
            'primary' => 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',
            'secondary' => 'bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500',
            'danger' => 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',
            default => 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500'
        };

        return trim($baseClasses.' '.$sizeClasses.' '.$variantClasses);
    }

    public function render()
    {
        return view('components.cart.add-to-cart-button');
    }
}
</file>

<file path="app/View/Components/Cart/CartIcon.php">
<?php

namespace App\View\Components\Cart;

use App\Services\CartService;
use Illuminate\View\Component;

class CartIcon extends Component
{
    public function __construct(
        private CartService $cartService
    ) {}

    public function getCartCount(): int
    {
        return $this->cartService->getItemCount();
    }

    public function render()
    {
        return view('components.cart.cart-icon');
    }
}
</file>

<file path="app/View/Components/Cart/CartSidebar.php">
<?php

namespace App\View\Components\Cart;

use App\Services\CartService;
use Illuminate\View\Component;

class CartSidebar extends Component
{
    public function __construct(
        private CartService $cartService
    ) {}

    public function getCartData(): array
    {
        return [
            'items' => $this->cartService->getCart(),
            'total' => $this->cartService->getTotal(),
            'count' => $this->cartService->getItemCount(),
        ];
    }

    public function render()
    {
        return view('components.cart.cart-sidebar');
    }
}
</file>

<file path="app/View/Components/UI/Button.php">
<?php

namespace App\View\Components\UI;

use Illuminate\View\Component;

class Button extends Component
{
    public function __construct(
        public string $variant = 'primary',
        public string $size = 'md',
        public ?string $type = 'button',
        public bool $disabled = false,
        public ?string $href = null
    ) {}

    public function getButtonClasses(): string
    {
        $baseClasses = 'inline-flex items-center justify-center font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed';

        $variantClasses = match ($this->variant) {
            'primary' => 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',
            'secondary' => 'bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500',
            'danger' => 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',
            'ghost' => 'text-gray-700 hover:bg-gray-100 focus:ring-gray-500',
            default => 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500'
        };

        $sizeClasses = match ($this->size) {
            'sm' => 'px-3 py-2 text-sm',
            'lg' => 'px-6 py-3 text-lg',
            default => 'px-4 py-2 text-base'
        };

        return trim($baseClasses.' '.$variantClasses.' '.$sizeClasses);
    }

    public function render()
    {
        return view('components.ui.button');
    }
}
</file>

<file path="resources/js/stores/cart.js">
// Define component functions BEFORE Alpine initializes
window.addToCartComponent = function(productId, variantId = null, initialQuantity = 1) {
    return {
        quantity: initialQuantity,
        loading: false,
        async addToCart() {
            if (this.loading) return;
            this.loading = true;
            try {
                await Alpine.store('cart').addItem(productId, variantId, this.quantity);
                if (this.quantity > 1) {
                    this.quantity = 1;
                }
            } catch (error) {
                // Error handled in store
            } finally {
                this.loading = false;
            }
        },
        increaseQuantity() {
            if (this.quantity < 10) this.quantity++;
        },
        decreaseQuantity() {
            if (this.quantity > 1) this.quantity--;
        }
    };
};

window.toastContainer = function() {
    return {
        toasts: [],
        nextId: 1,
        addToast(detail) {
            const toast = {
                id: this.nextId++,
                message: detail.message,
                type: detail.type || 'info',
                show: true
            };
            this.toasts.push(toast);
            setTimeout(() => {
                this.removeToast(toast.id);
            }, 5000);
        },
        removeToast(id) {
            const index = this.toasts.findIndex(toast => toast.id === id);
            if (index > -1) {
                this.toasts[index].show = false;
                setTimeout(() => {
                    const newIndex = this.toasts.findIndex(toast => toast.id === id);
                    if (newIndex > -1) {
                        this.toasts.splice(newIndex, 1);
                    }
                }, 300);
            }
        }
    };
};

// Initialize Alpine store
document.addEventListener('alpine:init', () => {
    Alpine.store('cart', {
        isOpen: false,
        items: [],
        count: 0,
        total: 0,
        loading: false,

        init() {
            this.loadCart();
        },

        async loadCart() {
            try {
                const response = await fetch('/api/cart/data', {
                    headers: {
                        'Accept': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                    }
                });

                if (!response.ok) throw new Error('Failed to load cart');

                const data = await response.json();

                if (data.success) {
                    // Ensure items have keys
                    this.items = (data.items || []).map(item => ({
                        ...item,
                        key: item.key || this.generateKey(item.product_id, item.variant_id)
                    }));
                    this.count = data.count || 0;
                    this.total = data.total || 0;
                }
            } catch (error) {
                console.error('Failed to load cart:', error);
                this.items = [];
                this.count = 0;
                this.total = 0;
            }
        },

        async addItem(productId, variantId = null, quantity = 1) {
            this.loading = true;
            try {
                const response = await fetch('/api/cart/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content,
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({
                        product_id: productId,
                        variant_id: variantId,
                        quantity: quantity
                    })
                });

                const data = await response.json();

                if (data.success) {
                    await this.loadCart();
                    this.showToast(`Added ${quantity} item${quantity > 1 ? 's' : ''} to cart!`, 'success');
                    this.animateCartIcon();
                    return data;
                } else {
                    throw new Error(data.message || 'Failed to add item to cart');
                }
            } catch (error) {
                console.error('Error adding to cart:', error);
                this.showToast('Error adding item to cart', 'error');
                throw error;
            } finally {
                this.loading = false;
            }
        },

        async removeItem(key) {
            try {
                const response = await fetch(`/api/cart/${key}`, {
                    method: 'DELETE',
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content,
                        'Accept': 'application/json'
                    }
                });

                const data = await response.json();

                if (data.success) {
                    await this.loadCart();
                    this.showToast('Item removed from cart', 'info');
                } else {
                    throw new Error(data.message || 'Failed to remove item');
                }
            } catch (error) {
                console.error('Error removing from cart:', error);
                this.showToast('Error removing item', 'error');
            }
        },

        async updateQuantity(key, quantity) {
            if (quantity <= 0) {
                return this.removeItem(key);
            }
            try {
                const response = await fetch(`/api/cart/${key}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content,
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ quantity })
                });

                const data = await response.json();

                if (data.success) {
                    await this.loadCart();
                } else {
                    throw new Error(data.message || 'Failed to update quantity');
                }
            } catch (error) {
                console.error('Error updating quantity:', error);
                this.showToast('Error updating quantity', 'error');
            }
        },

        open() { this.isOpen = true; },
        close() { this.isOpen = false; },
        toggle() { this.isOpen = !this.isOpen; },

        get formattedTotal() {
            return '£' + (this.total || 0).toFixed(2);
        },

        generateKey(productId, variantId = null) {
            return variantId ? `${productId}-${variantId}` : `${productId}`;
        },

        animateCartIcon() {
            const cartIcon = document.querySelector('[x-text="$store.cart.count"]');
            if (cartIcon) {
                cartIcon.classList.add('animate-bounce');
                setTimeout(() => cartIcon.classList.remove('animate-bounce'), 1000);
            }
        },

        showToast(message, type = 'info') {
            window.dispatchEvent(new CustomEvent('show-toast', {
                detail: { message, type }
            }));
        }
    });
});

// Global helper function
window.addToCart = async function(productId, variantId = null, quantity = 1) {
    try {
        await Alpine.store('cart').addItem(productId, variantId, quantity);
    } catch (error) {
        console.error('Error adding to cart:', error);
    }
};
</file>

<file path="resources/views/components/cart/add-to-cart-button.blade.php">
@props(['item', 'quantity' => 1, 'size' => 'md', 'showQuantitySelector' => false, 'variant' => 'primary'])

<div class="add-to-cart-component" x-data="addToCartComponent({{ $getProductId() }}, {{ $getVariantId() ?? 'null' }}, {{ $quantity }})">

    @if ($showQuantitySelector)
        <div class="flex items-center space-x-2 mb-3">
            <label class="text-sm font-medium text-gray-700">Quantity:</label>
            <div class="flex items-center border border-gray-300 rounded">
                <button @click="decreaseQuantity()" :disabled="quantity <= 1"
                    class="px-2 py-1 hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                    </svg>
                </button>
                <input type="number" x-model="quantity" min="1" max="10"
                    class="w-16 px-2 py-1 text-center border-0 focus:ring-0 focus:outline-none">
                <button @click="increaseQuantity()" :disabled="quantity >= 10"
                    class="px-2 py-1 hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                </button>
            </div>
        </div>
    @endif

    @if ($canAddToCart())
        <button @click="addToCart()" :disabled="loading" {{ $attributes->merge(['class' => $getButtonClasses()]) }}>

            <!-- Loading Spinner -->
            <svg x-show="loading" class="animate-spin -ml-1 mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4">
                </circle>
                <path class="opacity-75" fill="currentColor"
                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
                </path>
            </svg>

            <span x-show="!loading">Add to Cart</span>
            <span x-show="loading">Adding...</span>
        </button>
    @else
        <button disabled
            {{ $attributes->merge(['class' => 'inline-flex items-center justify-center px-4 py-2 bg-gray-400 text-white font-medium rounded-md cursor-not-allowed']) }}>
            @if ($item instanceof \App\Models\Product\ProductVariant && !$item->is_active)
                Unavailable
            @elseif($item instanceof \App\Models\Product\Product && $item->status !== 'published')
                Unavailable
            @else
                Out of Stock
            @endif
        </button>
    @endif
</div>
</file>

<file path="resources/views/components/cart/cart-icon.blade.php">
<div class="relative">
    <button @click="$store.cart.toggle()"
        class="relative p-2 text-gray-600 hover:text-gray-900 rounded-lg hover:bg-gray-100 transition-colors">
        <!-- Shopping Cart SVG (keeping your existing icon) -->
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-basket3-fill"
            viewBox="0 0 16 16">
            <path
                d="M5.757 1.071a.5.5 0 0 1 .172.686L3.383 6h9.234L10.07 1.757a.5.5 0 1 1 .858-.514L13.783 6H15.5a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5v-1A.5.5 0 0 1 .5 6h1.717L5.07 1.243a.5.5 0 0 1 .686-.172zM2.468 15.426.943 9h14.114l-1.525 6.426a.75.75 0 0 1-.729.574H3.197a.75.75 0 0 1-.73-.574z" />
        </svg>

        <!-- Cart Counter Badge -->
        <span x-text="$store.cart.count" x-show="$store.cart.count > 0"
            class="absolute top-0 right-0 bg-blue-600 text-white text-xs font-medium rounded-full h-5 w-5 flex items-center justify-center transform translate-x-1 -translate-y-1 transition-all duration-200">
        </span>
    </button>
</div>
</file>

<file path="resources/views/components/cart/cart-sidebar.blade.php">
<div class="fixed inset-0 z-50 overflow-hidden" x-show="$store.cart.isOpen" x-cloak
    @keydown.escape.window="$store.cart.close()">

    <!-- Backdrop -->
    <div class="absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" x-show="$store.cart.isOpen"
        x-transition:enter="ease-in-out duration-300" x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100" x-transition:leave="ease-in-out duration-300"
        x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0" @click="$store.cart.close()"></div>

    <!-- Sidebar -->
    <div class="absolute right-0 top-0 h-full w-full max-w-md">
        <div class="flex h-full flex-col bg-white shadow-xl" x-show="$store.cart.isOpen"
            x-transition:enter="transform transition ease-in-out duration-300"
            x-transition:enter-start="translate-x-full" x-transition:enter-end="translate-x-0"
            x-transition:leave="transform transition ease-in-out duration-300" x-transition:leave-start="translate-x-0"
            x-transition:leave-end="translate-x-full">

            <!-- Header -->
            <div class="flex items-center justify-between px-4 py-6 border-b border-gray-300">
                <h2 class="text-lg font-medium text-gray-900">Shopping Cart</h2>
                <button @click="$store.cart.close()" class="rounded-md bg-white text-gray-400 hover:text-gray-500 p-1">
                    <span class="sr-only">Close</span>
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>

            <!-- Cart Items -->
            <div class="flex-1 overflow-y-auto px-4 py-6">
                <!-- Empty State -->
                <template x-if="$store.cart.items.length === 0">
                    <div class="text-center text-gray-500 py-8">
                        <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none"
                            viewBox="0 0 48 48">
                            <path
                                d="M34 40h10v-4a6 6 0 00-10.712-3.714M34 40H14m20 0v-4a9.971 9.971 0 00-.712-3.714M14 40H4v-4a6 6 0 0110.713-3.714M14 40v-4c0-1.313.253-2.566.713-3.714m0 0A9.971 9.971 0 0124 24c4.21 0 7.863 2.613 9.288 6.286"
                                stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        </svg>
                        <p class="mt-2">Your cart is empty</p>
                        <a href="{{ route('products.index') }}" @click="$store.cart.close()"
                            class="mt-4 inline-block text-blue-600 hover:text-blue-700">
                            Continue Shopping
                        </a>
                    </div>
                </template>

                <!-- Cart Items List -->
                <div class="space-y-4">
                    <template x-for="item in $store.cart.items" :key="item.key">
                        <div class="flex items-center space-x-3 py-3 border-b border-gray-100 last:border-b-0">
                            <!-- Product Image -->
                            <div class="flex-shrink-0 w-12 h-12 bg-gray-200 rounded overflow-hidden">
                                <template x-if="item.image">
                                    <img :src="item.image" :alt="item.name"
                                        class="w-full h-full object-cover">
                                </template>
                                <template x-if="!item.image">
                                    <div class="w-full h-full flex items-center justify-center">
                                        <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor"
                                            viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z">
                                            </path>
                                        </svg>
                                    </div>
                                </template>
                            </div>

                            <!-- Product Details -->
                            <div class="flex-1 min-w-0">
                                <h4 class="text-sm font-medium text-gray-900 truncate" x-text="item.name"></h4>
                                <p class="text-sm text-gray-500">
                                    Qty: <span x-text="item.quantity"></span>
                                </p>
                                <p class="text-sm font-medium text-gray-900"
                                    x-text="'£' + (item.price * item.quantity).toFixed(2)"></p>
                            </div>

                            <!-- Quantity Controls -->
                            <div class="flex items-center space-x-1">
                                <button @click="$store.cart.updateQuantity(item.key, item.quantity - 1)"
                                    :disabled="item.quantity <= 1"
                                    class="w-6 h-6 flex items-center justify-center border border-gray-300 rounded text-xs hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
                                    -
                                </button>
                                <span class="w-8 text-center text-sm" x-text="item.quantity"></span>
                                <button @click="$store.cart.updateQuantity(item.key, item.quantity + 1)"
                                    :disabled="item.quantity >= 10"
                                    class="w-6 h-6 flex items-center justify-center border border-gray-300 rounded text-xs hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed">
                                    +
                                </button>
                            </div>

                            <!-- Remove Button -->
                            <button @click="$store.cart.removeItem(item.key)"
                                class="text-red-500 hover:text-red-700 p-1 transition-colors">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M6 18L18 6M6 6l12 12"></path>
                                </svg>
                            </button>
                        </div>
                    </template>
                </div>
            </div>

            <!-- Footer -->
            <template x-if="$store.cart.items.length > 0">
                <div class="border-t border-gray-200 px-4 py-6">
                    <div class="flex justify-between text-base font-medium text-gray-900 mb-4">
                        <p>Subtotal</p>
                        <p x-text="$store.cart.formattedTotal"></p>
                    </div>
                    <p class="mt-0.5 text-sm text-gray-500">Shipping and taxes calculated at checkout.</p>

                    <div class="mt-6 space-y-3">
                        <a href="{{ route('cart.index') }}" @click="$store.cart.close()"
                            class="block w-full rounded-md bg-gray-600 px-6 py-3 text-center text-base font-medium text-white hover:bg-gray-700 transition-colors">
                            View Cart
                        </a>
                        <a href="{{ route('checkout.index') }}" @click="$store.cart.close()"
                            class="block w-full rounded-md bg-blue-600 px-6 py-3 text-center text-base font-medium text-white hover:bg-blue-700 transition-colors">
                            Checkout
                        </a>
                    </div>

                    <div class="mt-6 flex justify-center text-center text-sm text-gray-500">
                        <p>
                            or
                            <button @click="$store.cart.close()" class="font-medium text-blue-600 hover:text-blue-500">
                                Continue Shopping<span aria-hidden="true"> →</span>
                            </button>
                        </p>
                    </div>
                </div>
            </template>
        </div>
    </div>
</div>
</file>

<file path="resources/views/components/navigation/auth-mobile.blade.php">
{{-- resources/views/components/navigation/auth-mobile.blade.php --}}
<div class="lg:hidden px-4 py-2 border-t border-gray-200">
    @auth
        <div class="space-y-1">
            <div class="px-3 py-2 text-sm font-medium text-gray-900 border-b border-gray-200 mb-2">
                <div class="font-medium">{{ auth()->user()->name }}</div>
                <div class="text-gray-500 text-xs">{{ auth()->user()->email }}</div>
            </div>
            <a href="{{ route('account.index') }}" class="block px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md">
                <svg class="inline h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                </svg>
                My Account
            </a>
            <a href="{{ route('orders.index') }}"
                class="block px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md">
                <svg class="inline h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10">
                    </path>
                </svg>
                My Orders
            </a>
            <a href="{{ route('account.edit') }}"
                class="block px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md">
                <svg class="inline h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z">
                    </path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                </svg>
                Account Settings
            </a>
            <form method="POST" action="{{ route('logout') }}" class="mt-2">
                @csrf
                <button type="submit"
                    class="block w-full text-left px-3 py-2 text-sm text-red-600 hover:bg-red-50 rounded-md">
                    <svg class="inline h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1">
                        </path>
                    </svg>
                    Sign Out
                </button>
            </form>
        </div>
    @else
        <div class="space-y-2">
            <a href="{{ route('login') }}"
                class="block w-full text-center px-3 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
                Sign In
            </a>
            <a href="{{ route('register') }}"
                class="block w-full text-center px-3 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700">
                Sign Up
            </a>
        </div>
    @endauth
</div>
</file>

<file path="resources/views/components/navigation/auth.blade.php">
{{-- resources/views/components/navigation/auth.blade.php --}}
<div class="hidden lg:flex lg:items-center lg:space-x-4">
    @auth
        <!-- User is logged in -->
        <div class="relative" x-data="{ open: false }">
            <button @click="open = !open"
                class="flex items-center text-sm rounded-full text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                <svg class="h-6 w-6 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                </svg>
                <span class="max-w-32 truncate">{{ auth()->user()->name }}</span>
                <svg class="ml-1 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
            </button>

            <!-- Dropdown Menu -->
            <div x-show="open" x-cloak @click.away="open = false" x-transition:enter="transition ease-out duration-100"
                x-transition:enter-start="transform opacity-0 scale-95"
                x-transition:enter-end="transform opacity-100 scale-100" x-transition:leave="transition ease-in duration-75"
                x-transition:leave-start="transform opacity-100 scale-100"
                x-transition:leave-end="transform opacity-0 scale-95"
                class="origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 z-50">
                <div class="py-1">
                    <div class="px-4 py-2 text-sm text-gray-900 border-b border-gray-100">
                        <div class="font-medium">{{ auth()->user()->name }}</div>
                        <div class="text-gray-500">{{ auth()->user()->email }}</div>
                    </div>
                    <a href="{{ route('account.index') }}" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                        <svg class="inline h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                        </svg>
                        My Account
                    </a>
                    <a href="{{ route('orders.index') }}" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                        <svg class="inline h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10">
                            </path>
                        </svg>
                        My Orders
                    </a>
                    <a href="{{ route('account.edit') }}" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                        <svg class="inline h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z">
                            </path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        Account Settings
                    </a>
                    <div class="border-t border-gray-100"></div>
                    <form method="POST" action="{{ route('logout') }}">
                        @csrf
                        <button type="submit"
                            class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                            <svg class="inline h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1">
                                </path>
                            </svg>
                            Sign Out
                        </button>
                    </form>
                </div>
            </div>
        </div>
    @else
        <!-- User is not logged in -->
        <a href="{{ route('login') }}"
            class="text-gray-500 hover:text-gray-700 px-3 py-2 text-sm font-medium transition-colors">
            Sign In
        </a>
        <a href="{{ route('register') }}"
            class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
            Sign Up
        </a>
    @endauth
</div>
</file>

<file path="resources/views/components/navigation/main.blade.php">
{{-- resources/views/components/navigation/main.blade.php --}}
<header class="bg-white shadow-sm border-b border-gray-300 sticky top-0 z-40">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">

            <!-- Logo -->
            <div class="flex-shrink-0">
                <a href="{{ route('home') }}"
                    class="text-2xl font-bold text-gray-900 hover:text-gray-700 transition-colors">
                    {{ config('app.name', 'Store') }}
                </a>
            </div>

            <!-- Desktop Navigation -->
            <nav class="hidden md:flex items-center space-x-8">
                <a href="{{ route('home') }}"
                    class="text-gray-700 hover:text-blue-600 transition-colors {{ request()->routeIs('home') ? 'text-blue-600 font-medium' : '' }}">
                    Home
                </a>
                <a href="{{ route('products.index') }}"
                    class="text-gray-700 hover:text-blue-600 transition-colors {{ request()->routeIs('products.*') ? 'text-blue-600 font-medium' : '' }}">
                    Products
                </a>
                <a href="{{ route('orders.track') }}"
                    class="text-gray-700 hover:text-blue-600 transition-colors {{ request()->routeIs('orders.track') ? 'text-blue-600 font-medium' : '' }}">
                    Track Order
                </a>
            </nav>

            <!-- Search Bar -->
            <div class="flex-1 max-w-lg mx-4 lg:mx-8">
                <form action="{{ route('products.index') }}" method="GET" class="relative">
                    <input type="text" name="search" value="{{ request('search') }}"
                        placeholder="Search products..."
                        class="w-full pl-4 pr-10 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-colors">
                    <button type="submit"
                        class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </button>
                </form>
            </div>

            <!-- Right Side: Auth + Cart -->
            <div class="flex items-center space-x-4">
                <!-- Authentication Section -->
                @include('components.navigation.auth')

                <!-- Cart Icon -->
                <x-cart.cart-icon />
            </div>

            <!-- Mobile Menu Button -->
            <div class="md:hidden ml-4">
                <button @click="mobileMenuOpen = !mobileMenuOpen" class="text-gray-500 hover:text-gray-700 p-2">
                    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M4 6h16M4 12h16M4 18h16"></path>
                    </svg>
                </button>
            </div>
        </div>

        <!-- Mobile Menu -->
        <div x-show="mobileMenuOpen" x-cloak x-transition:enter="transition ease-out duration-200"
            x-transition:enter-start="opacity-0 -translate-y-1" x-transition:enter-end="opacity-100 translate-y-0"
            x-transition:leave="transition ease-in duration-150" x-transition:leave-start="opacity-100 translate-y-0"
            x-transition:leave-end="opacity-0 -translate-y-1" class="md:hidden border-t border-gray-200 bg-white">

            <!-- Mobile Navigation Links -->
            <div class="px-4 py-2 space-y-1">
                <a href="{{ route('home') }}"
                    class="block px-3 py-2 text-gray-700 hover:bg-gray-100 rounded-md {{ request()->routeIs('home') ? 'bg-blue-50 text-blue-600' : '' }}">
                    Home
                </a>
                <a href="{{ route('products.index') }}"
                    class="block px-3 py-2 text-gray-700 hover:bg-gray-100 rounded-md {{ request()->routeIs('products.*') ? 'bg-blue-50 text-blue-600' : '' }}">
                    Products
                </a>
                <a href="{{ route('orders.track') }}"
                    class="block px-3 py-2 text-gray-700 hover:bg-gray-100 rounded-md {{ request()->routeIs('orders.track') ? 'bg-blue-50 text-blue-600' : '' }}">
                    Track Order
                </a>
            </div>

            <!-- Mobile Authentication Section -->
            @include('components.navigation.auth-mobile')
        </div>
    </div>
</header>
</file>

<file path="resources/views/components/ui/button.blade.php">
@if ($href)
    <a href="{{ $href }}" {{ $attributes->merge(['class' => $getButtonClasses()]) }}>
        {{ $slot }}
    </a>
@else
    <button type="{{ $type }}" :disabled="disabled" {{ $attributes->merge(['class' => $getButtonClasses()]) }}>
        {{ $slot }}
    </button>
@endif
</file>

<file path="resources/views/components/ui/toast-container.blade.php">
<div id="toast-container" class="fixed top-4 right-4 z-50 space-y-2 pointer-events-none" x-data="toastContainer()"
    @show-toast.window="addToast($event.detail)">

    <template x-for="toast in toasts" :key="toast.id">
        <div class="pointer-events-auto max-w-sm w-full bg-white shadow-lg rounded-lg overflow-hidden transform transition-all duration-300"
            :class="toast.type === 'success' ? 'border-l-4 border-green-400' :
                toast.type === 'error' ? 'border-l-4 border-red-400' :
                toast.type === 'warning' ? 'border-l-4 border-yellow-400' :
                'border-l-4 border-blue-400'"
            x-show="toast.show" x-transition:enter="transform ease-out duration-300 transition"
            x-transition:enter-start="translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2"
            x-transition:enter-end="translate-y-0 opacity-100 sm:translate-x-0"
            x-transition:leave="transition ease-in duration-100" x-transition:leave-start="opacity-100"
            x-transition:leave-end="opacity-0">

            <div class="p-4">
                <div class="flex items-start">
                    <div class="flex-shrink-0">
                        <!-- Success Icon -->
                        <template x-if="toast.type === 'success'">
                            <svg class="h-5 w-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd"
                                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                                    clip-rule="evenodd" />
                            </svg>
                        </template>

                        <!-- Error Icon -->
                        <template x-if="toast.type === 'error'">
                            <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd"
                                    d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                                    clip-rule="evenodd" />
                            </svg>
                        </template>

                        <!-- Warning Icon -->
                        <template x-if="toast.type === 'warning'">
                            <svg class="h-5 w-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd"
                                    d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z"
                                    clip-rule="evenodd" />
                            </svg>
                        </template>

                        <!-- Info Icon -->
                        <template x-if="toast.type === 'info'">
                            <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd"
                                    d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
                                    clip-rule="evenodd" />
                            </svg>
                        </template>
                    </div>

                    <div class="ml-3 w-0 flex-1">
                        <p class="text-sm font-medium text-gray-900" x-text="toast.message"></p>
                    </div>

                    <div class="ml-4 flex-shrink-0 flex">
                        <button @click="removeToast(toast.id)"
                            class="bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            <span class="sr-only">Close</span>
                            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd"
                                    d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                                    clip-rule="evenodd" />
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </template>
</div>
</file>

<file path="resources/views/components/footer.blade.php">
{{-- resources/views/components/footer.blade.php --}}
<footer class="bg-gray-900 text-white mt-auto">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
            <!-- Company Info -->
            <div>
                <h3 class="text-lg font-semibold mb-4">{{ config('app.name') }}</h3>
                <p class="text-gray-300 mb-4">Your trusted online store for quality products at great prices.</p>
                <div class="flex space-x-4">
                    <!-- Social Links -->
                    <a href="#" class="text-gray-400 hover:text-white transition-colors">
                        <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                            <path
                                d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z" />
                        </svg>
                    </a>
                    <a href="#" class="text-gray-400 hover:text-white transition-colors">
                        <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                            <path
                                d="M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z" />
                        </svg>
                    </a>
                    <a href="#" class="text-gray-400 hover:text-white transition-colors">
                        <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                            <path
                                d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.097.118.112.221.085.341-.09.381-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.746-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24.009c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001.012.001z" />
                        </svg>
                    </a>
                </div>
            </div>

            <!-- Quick Links -->
            <div>
                <h3 class="text-lg font-semibold mb-4">Quick Links</h3>
                <ul class="space-y-2 text-gray-300">
                    <li><a href="{{ route('home') }}" class="hover:text-white transition-colors">Home</a></li>
                    <li><a href="{{ route('products.index') }}" class="hover:text-white transition-colors">Products</a>
                    </li>
                    <li><a href="{{ route('orders.track') }}" class="hover:text-white transition-colors">Track Order</a>
                    </li>
                    @auth
                        <li><a href="{{ route('account.index') }}" class="hover:text-white transition-colors">My Account</a>
                        </li>
                        <li><a href="{{ route('orders.index') }}" class="hover:text-white transition-colors">My Orders</a>
                        </li>
                    @else
                        <li><a href="{{ route('login') }}" class="hover:text-white transition-colors">Sign In</a></li>
                        <li><a href="{{ route('register') }}" class="hover:text-white transition-colors">Sign Up</a></li>
                    @endauth
                </ul>
            </div>

            <!-- Categories -->
            <div>
                <h3 class="text-lg font-semibold mb-4">Categories</h3>
                <ul class="space-y-2 text-gray-300">
                    @foreach (\App\Models\Product\Category::active()->root()->limit(5)->get() as $category)
                        <li>
                            <a href="{{ route('categories.show', $category->slug) }}"
                                class="hover:text-white transition-colors">
                                {{ $category->name }}
                            </a>
                        </li>
                    @endforeach
                    <li>
                        <a href="{{ route('products.index') }}"
                            class="text-blue-400 hover:text-blue-300 transition-colors">
                            View All Categories →
                        </a>
                    </li>
                </ul>
            </div>

            <!-- Contact & Support -->
            <div>
                <h3 class="text-lg font-semibold mb-4">Contact & Support</h3>
                <ul class="space-y-2 text-gray-300">
                    <li class="flex items-center">
                        <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z">
                            </path>
                        </svg>
                        <a href="mailto:support@example.com"
                            class="hover:text-white transition-colors">support@example.com</a>
                    </li>
                    <li class="flex items-center">
                        <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z">
                            </path>
                        </svg>
                        <a href="tel:+15551234567" class="hover:text-white transition-colors">(555) 123-4567</a>
                    </li>
                    <li class="flex items-start">
                        <svg class="h-4 w-4 mr-2 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z">
                            </path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        <span>123 Commerce St<br>Suite 100<br>Business City, BC 12345</span>
                    </li>
                </ul>

                <!-- Customer Service Hours -->
                <div class="mt-4 pt-4 border-t border-gray-700">
                    <h4 class="text-sm font-medium text-white mb-2">Customer Service Hours</h4>
                    <p class="text-sm text-gray-300">
                        Mon-Fri: 9AM-6PM<br>
                        Sat: 10AM-4PM<br>
                        Sun: Closed
                    </p>
                </div>
            </div>
        </div>

        <!-- Newsletter Signup -->
        <div class="mt-8 pt-8 border-t border-gray-700">
            <div class="md:flex md:items-center md:justify-between">
                <div class="mb-4 md:mb-0">
                    <h3 class="text-lg font-semibold mb-2">Stay Updated</h3>
                    <p class="text-gray-300">Subscribe to our newsletter for the latest products and deals.</p>
                </div>
                <div class="flex">
                    <input type="email" placeholder="Enter your email"
                        class="px-4 py-2 bg-gray-800 border border-gray-600 rounded-l-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-white placeholder-gray-400">
                    <button type="submit"
                        class="px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-r-md transition-colors">
                        Subscribe
                    </button>
                </div>
            </div>
        </div>

        <!-- Bottom Footer -->
        <div class="mt-8 pt-8 border-t border-gray-700">
            <div class="md:flex md:items-center md:justify-between">
                <div class="text-center md:text-left">
                    <p class="text-gray-300">
                        &copy; {{ date('Y') }} {{ config('app.name') }}. All rights reserved.
                    </p>
                </div>
                <div class="mt-4 md:mt-0">
                    <ul class="flex justify-center md:justify-end space-x-6 text-sm text-gray-300">
                        <li><a href="#" class="hover:text-white transition-colors">Privacy Policy</a></li>
                        <li><a href="#" class="hover:text-white transition-colors">Terms of Service</a></li>
                        <li><a href="#" class="hover:text-white transition-colors">Returns</a></li>
                        <li><a href="#" class="hover:text-white transition-colors">Shipping Info</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</footer>
</file>

<file path="resources/views/layouts/frontend.blade.php">
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <title>@yield('title', config('app.name', 'E-commerce Store'))</title>

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico">

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.bunny.net">
    <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

    <!-- Styles -->
    @vite(['resources/css/app.css', 'resources/js/app.js'])

    <!-- Alpine.js -->
    <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>

    <!-- Custom Styles -->
    <style>
        [x-cloak] {
            display: none !important;
        }

        .line-clamp-2 {
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        /* Smooth scrolling */
        html {
            scroll-behavior: smooth;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        ::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #a1a1a1;
        }
    </style>

    <!-- Additional Head Content -->
    @stack('head')
</head>

<body class="bg-gray-50 min-h-screen flex flex-col" x-data="{ mobileMenuOpen: false }">

    <!-- Success/Error Flash Messages -->
    @if (session('success'))
        <div class="fixed top-4 right-4 z-50 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg"
            x-data="{ show: true }" x-show="show" x-init="setTimeout(() => show = false, 5000)">
            <div class="flex items-center space-x-3">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                <span>{{ session('success') }}</span>
            </div>
        </div>
    @endif

    @if (session('error'))
        <div class="fixed top-4 right-4 z-50 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg"
            x-data="{ show: true }" x-show="show" x-init="setTimeout(() => show = false, 5000)">
            <div class="flex items-center space-x-3">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12">
                    </path>
                </svg>
                <span>{{ session('error') }}</span>
            </div>
        </div>
    @endif

    <!-- Navigation -->
    @include('components.navigation.main')

    <!-- Main Content -->
    <main class="flex-grow">
        @yield('content')
    </main>

    <!-- Footer -->
    @include('components.footer')

    <!-- Global Components -->
    <x-cart.cart-sidebar />
    <x-ui.toast-container />

    <!-- Load Cart Store JavaScript -->
    @vite(['resources/js/stores/cart.js'])

    <!-- Minimal Global JavaScript -->
    <!-- Complete Cart Store JavaScript (inline) -->
    <script>
        function toastContainer() {
            return {
                toasts: [],
                nextId: 1,

                addToast(detail) {
                    const toast = {
                        id: this.nextId++,
                        message: detail.message,
                        type: detail.type || 'info',
                        show: true
                    };

                    this.toasts.push(toast);

                    setTimeout(() => {
                        this.removeToast(toast.id);
                    }, 5000);
                },

                removeToast(id) {
                    const index = this.toasts.findIndex(toast => toast.id === id);
                    if (index > -1) {
                        this.toasts[index].show = false;
                        setTimeout(() => {
                            const newIndex = this.toasts.findIndex(toast => toast.id === id);
                            if (newIndex > -1) {
                                this.toasts.splice(newIndex, 1);
                            }
                        }, 300);
                    }
                }
            };
        }


        // Performance monitoring
        window.addEventListener('load', function() {
            const loadTime = window.performance.timing.domContentLoadedEventEnd -
                window.performance.timing.navigationStart;
            console.log(`Page loaded in ${loadTime}ms`);
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                if (window.Alpine && Alpine.store) {
                    const cartStore = Alpine.store('cart');
                    if (cartStore && cartStore.isOpen) {
                        cartStore.close();
                    }
                }

                const appData = document.querySelector('[x-data]').__x;
                if (appData && appData.$data.mobileMenuOpen) {
                    appData.$data.mobileMenuOpen = false;
                }
            }
        });

        // Global helper function (for backward compatibility)
        window.addToCart = async function(productId, variantId = null, quantity = 1) {
            if (window.Alpine && Alpine.store) {
                try {
                    await Alpine.store('cart').addItem(productId, variantId, quantity);
                } catch (error) {
                    console.error('Error adding to cart:', error);
                }
            }
        };

        console.log('Cart system initialized');
    </script>

    @stack('scripts')
</body>

</html>
</file>

</files>
